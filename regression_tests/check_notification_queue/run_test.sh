#!/bin/bash

# Test case flow:
# - runs an instance of Metax with config2.xml
# - runs and stops second Metax with config1.xml 4 times
# - connects to config2.xml Metax with websocket
# - makes sure that notifications generated by connecting and disconnecting of
#   config1.xml Metax are received upon websocket connections


source ../../test_utils/functions.sh

# wait command exit code when metax was successfully finished (i.e. without Seg. fault or Assertion)
EXIT_CODE_OK=0





main()
{
	cd $test_dir
        cp $tst_src_dir/websocket_client.js .
        npm install ws
        $EXECUTE -f $tst_src_dir/config2.xml &
        p2=$!
        is_peer_connected=$(peers_connect 7091 $tst_src_dir/config2.xml)
        for i in {1..4}
        do
                $EXECUTE -f $tst_src_dir/config1.xml &
                p1=$!
                is_peer_connected=$(peers_connect 7081 $tst_src_dir/config1.xml)
                if [ "0" != "$is_peer_connected" ];then
                        echo "7080 does not connect to peers"
                        kill_metax $p2 $p1
                        exit;
                fi
                echo -n $p2 $p1 > $test_dir/processes_ids
                kill_metax $p1
        done
	nodejs websocket_client.js 7091 $test_dir/data > $test_dir/notifications &
        pn=$!
	sleep 2
        kill $pn

	c=$(grep 'Received: {"event":' $test_dir/notifications | expr $(wc -l))
        echo $c

	if [[ $c -ne 10 ]]; then
		echo "Error in receiving notifications"
		kill_metax $p2
		exit;
	fi

	echo $PASS > $final_test_result
	kill_metax $p2
}

main $@
